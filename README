SYNOPSIS
    maple: MicroRNA Analysis Program Leveraging Expression

LICENSE
    maple

    Copyright (C) 2014 Michael J. Axtell

    This program is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation, either version 3 of the License, or (at your
    option) any later version.

    This program is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
    Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program. If not, see <http://www.gnu.org/licenses/>.

CITATION
    As yet unpublished.

AUTHOR
    Michael J. Axtell, Penn State University, mja18@psu.edu

DEPENDENCIES
        perl
        samtools
        RNAfold
        RNAplot

    Perl is required to be at /usr/bin/perl in order to compile maple.

    samtools <http://samtools.sourceforge.net/> needs to be installed in
    your PATH. maple was developed using samtools 0.1.19.

    RNAfold is from the ViennaRNA package. See
    <http://www.tbi.univie.ac.at/~ronny/RNA/vrna2.html>. RNAfold must in
    your PATH. maple was developed using version 2.1.3

INSTALL
    There is no real installation. Install samtools, RNAplot, and RNAfold to
    your PATH. For convenience, maple can also be installed to your PATH.

USAGE
    maple [options] [alignments.bam] [genome.fasta] [chr:start-stop]
    [strand]

    Output goes to STDOUT

OPTIONS
    --help : Print a help message and quit

    --version: Print the version number and quit

    --locus_name [string] : name of locus [optional .. if not given,
    defaults to UserLocus]

    --mature [string] : annotated/hypothesized mature miRNA sequence
    [optional]

    --mature_name [string] : name of mature query [optional .. if --mature
    is given, but --mature_name is not, defaults to UserMature]

    --show_duplexes [string] : What types of miR/miR* duplexes to show
    details for. 'all', 'pass', or 'none'. Default: 'pass'

    --miRType [string] : Kingdom from which your putative MIRNA locus hails.
    'animal' or 'plant'. Defaults to 'plant'

    --no_ps : Suppress creation of post-script image file

ALIGNMENTS
    Alignments must be produced with the program 'butter', version 0.2.1 or
    higher. You should have received a copy of butter along with maple. If
    not, get it at https://github.com/MikeAxtell/butter

  BAM file format requirements
    The detailed BAM file format requirements are listed below. All of these
    are produced by the program 'butter', version 0.2.1 or higher.

    1. The file must end with the extension ".bam"

    2. The file must have a header.

    3. The BAM file must be sorted by 'coordinate', as indicated by the SO:
    tag in the header.

    4. SQ lines must be present in the header, and they must all match names
    found in the genome.fasta file.

    5. Alignments must have custom tags XX:i, XY:Z, and XZ:f set. These tags
    are custom tags produced by the butter aligner program.

    6. The BAM file should be indexed using samtools index. If it is not,
    maple will attempt to index it.

    7. The BAM file must conform to the BAM/SAM format spec.

    Finally, while not a formal requirement (only because there isn't an
    easy way to check), maple assumes that each read is only present once in
    the alignment file. For multi-mapping reads, it is assumed that just one
    possible alignment was selected and reported. The program 'butter'
    accomplishes this.

PROCEDURES
    After receiving a valid command, maple does the following:

  Structure Identification and crude validation
    The query sequence is analyzed with RNAfold. The predicted structure
    with the lowest predicted free energy is retained and used for further
    analysis. Only small RNA reads falling entirely within this structure
    are considered. Note that the identified structure is often smaller than
    the input query. If no structure at all can be recovered from the query,
    the locus is scored 0, and failed, and no further analysis is performed.
    The structure is then (crudely) validated to ensure it meets minimum
    criterion for a potential microRNA precursor. Specifically, the fraction
    of bases paired within the stem must be at least 67%, and the number of
    base-pairs in the helix must be at least 15. For miRType 'plant', the
    stem can be no longer than 150 nts, and there is no limit on the loop
    size. For miRType 'animal', there can be no more than 45 base-pairs in
    the stem, and the loop length cannot exceed 15. Structures that don't
    meet these criteria are rejected, the locus is scored 0, and no further
    analysis performed.

  Small RNA alignment retrieval
    All alignments within the identified structure are retrieved. This is
    strand-specific, and only those alignments whose starts and stops are
    both within the structure are retrieved. If no alignments are found, the
    locus is scored 0, and failed, and no further analysis is performed.

  Analysis
    Analysis of expression and structural features commences provided a
    structure is found and there are alignments present. Details in SCORING
    below.

SCORING
    maple identifies and scores each potential miRNA/miRNA* duplex
    separately. For each potential duplex, maple uses a system based on both
    expression and structural criteria. The final score for each duplex is
    equally divided between expression-based metrics and structure-based
    metrics, each of which account for 50% of the overall score. There are
    six expression-based metrics and five structure-based metrics, as
    detailed below. Each metric is given a score between 0 and 1 (with 0
    being very poor and 1 being excellent). The six expression-based metrics
    are each weighted to 8.33% when calculating the overall score; the five
    expression-based metrics are each weighted to 10% each. The overall
    score thus also varies between 0 (poor) and 1 (excellent). In addition
    to the score, each potential miRNA/miRNA* duplex is granted a verdict of
    either PASS or FAIL. The PASS/FAIL decision is NOT linked directly to
    the score. In order to PASS, a duplex must score a certain minimum
    threshold on each of the criteria. Finally, the entire locus is scored
    and given a PASS/FAIL verdict. The locus score is the score of the
    best-scoring PASS duplex, or, if no duplexes passed, the score is the
    best scoring FAIL duplex. A locus gets a verdict of PASS if at least one
    duplexed was given a PASS.

  Expression-based scoring
    TOTAL NUMBER OF ALIGNMENTS
    This scoring component is locus-wide (it is the same for all potential
    miRNA/miRNA* duplexes)

    Scoring matrix:

    Alignments Score

    0-4 0

    5-9 0.25

    10-49 0.5

    50-99 0.75

    >=100 1

    UNIQUELY ALIGNED READS
    This is the number of alignments for reads that were uniquely mapped to
    the locus.

    This scoring component is locus-wide (it is the same for all potential
    miRNA/miRNA* duplexes)

    Scoring matrix:

    Unique_Reads Score

    0 0

    >=1 1

    miRNA READS
    This is the number of alignments for the mature miRNA sequence

    Scoring matrix

    miRNA_reads Score

    0-4 0 ** causes decision of FAIL

    5-9 0.25

    10-49 0.5

    50-99 0.75

    >=100 1

    STAR_READS
    This is the number of alignments for the miRNA-star sequence.

    Scoring matrix:

    Star_reads Score

    0 0 **causes decision of FAIL

    1-5 0.5

    >=6 1

    LENGTH OF miRNA
    Scoring matrix:

    Length Score

    <20 0 ** causes decision of FAIL

    20,21,or 22 1

    23 0.5

    24 0.25

    >24 0 ** causes decision of FAIL

    DIVERSITY
    This scoring component is locus-wide (it is the same for all potential
    miRNA/miRNA* duplexes)

    Diversity is defined as the number of distinct alignment positions
    divided by the total number of alignments. This is a locus-wide
    parameter. Diversity is a measure of the heterogeneity of processing. It
    is strongly affected by alignment depth at the locus, so maple judges
    the observed diversity with respect to two simulated diversity values.
    First, the expected diversity of the locus if alignment positions were
    purely random is calculated (the mean and standard deviation from 50
    simulations). Second, the expected diversity of the locus if alignment
    positions were from a single idealized miRNA/miRNA* duplex, at a 90%/10%
    ratio of miRNA to miRNA* (the mean and standard deviation from 50
    simulations). The observed diversity of the locus is then judged by its
    relationship to the purely random expectation, and the idealized
    expectation.

    Scoring matrix:

    condition a: if the idealized-mean + (2 * idealized-stdev) is >= the
    random-mean - (2 * random-stdev), the observed diveristy is scored 0 (**
    causes decision of FAIL). This occurs with low sequencing depth.

    condition b: if the ideal and random diversities are far enough apart
    that condition a is not met, then the observed diversity value is scored
    as follows:

    - if the observed is within 2 stdevs of the random-mean, it is scored 0
    ( ** causes decision of FAIL)

    - if the observed is within 2 stdevs of the ideal-mean, it is scored 1

    - if the observed lies between idealized-mean + (2 * idealized-stdev)
    and the random-mean - (2 * random-stdev), then it is scored as 1 -
    (observed - (idealized-mean + (2 * idealized-stdev))). Thus values
    closer to the idealized mean score higher, while those closer to the
    random mean score lower.

  Structure-based scoring
    MIR_ARM
    What arm of the stem is the hypothesized mature miRNA located on. For
    sequences that have predicted self-pairing, no arm can be determined
    (which causes a decision of FAIL).

    Scoring matrix

    Answer Score

    5p 1

    3p 1

    x 0 ** causes decision of FAIL

    MIR_UNPAIRED
    The number of nucleotides in the hypothesized mature miRNA that are
    unpaired.

    Scoring matrix

    n_unpaired Score

    0-3 1

    4 0.5

    5 0.25

    >=6 0 ** causes decision of FAIL

    STAR_COMPUTABLE
    Whether or not the position of the hypothesized mature miRNA-star could
    be computed. Non-computable miRNA-stars indicate a highly aberrant
    stem-loop.

    Scoring matrix

    Answer Score

    Yes 1

    No 0 ** causes decision of FAIL

    N_BULGES_DUPLEX
    The number of assymetric nucleotides in the hypothesized
    miRNA/miRNA-star duplex. This is calculated as the number of bulged
    nucleotides plus the number of 'excess' nucleotides in assymmetric
    internal loops. For instance, in an assymetric internal loop with 3 on
    one side and 2 on the other, 1 nt is in 'excess'.

    Scoring matrix

    n_assym Score

    0-1 1

    2 0.5

    3 0.25

    >=4 0 ** causes decision of FAIL

    MAX_STEM_BUFFER
    The maximum length of the stem flanking the hypothesized
    miRNA/miRNA-star duplex. This will either come from the loop-proximal or
    base-proximal side of the putative duplex. This is based on experimental
    and computational data indicating that plant MIRNA processing requires a
    spacing of about 15-17nts either from the base or the loop for the DCL
    enzyme to make the first 'cut' in plants. For miRType animals, the
    max_buffer is smaller to account for the generally ~11nts between the
    base of the structure and the Drosha cleavage site.

    Scoring matrix - miRType 'plant'

    max_buffer Score

    >=15 1

    13-14 0.5

    11-12 0.25

    10 0.1

    <=9 0 ** causes decision of FAIL

    Scoring matric - miRType 'animal'

    max_buffer Score

    >= 11 1

    9-10 0.5

    8 0.25

    7 1

    <=6 0 ** causes decision of FAIL

ALIGNMENTS
    The text-based alignments show the sequence of the best structure and
    the predicted secondary structure in RNAfold dot-bracket notation. Each
    line under that represents a distinct read sequence. Note that the read
    sequences are pulled from the reference genome, not the reads
    themselves. In cases where read alignment allowed mismatches, this
    caveat becomes meaningful.

    All read lines have two values at the end. "l" represents the length of
    the read in nts, and "a" represents the number of alignments for that
    read.

DUPLEXES
    By default, details of each miRNA/miRNA* duplex that had a verdict of
    PASS are shown. Duplexes with a verdict of FAIL are not shown by
    default. This can be changed with option --show_duplexes ('all' to see
    all of them, 'none' to see details for none of them).

ANNOTATED POST-SCRIPT IMAGES
    An annotated post-script image is written to the working directory,
    showing the per-nucleotide read-depth along the predicted secondary
    structure.

NOTES
  Scoring vs. the Verdict
    The scores of maple are not directly linked to the "PASS" / "FAIL"
    decisions. A locus can score very highly, but get a verdict of FAIL
    becuase it fell short in one key feature. Conversely, a locus could
    score lowly, but receive a verdict of PASS if it 'fails to fail' any of
    the key criteria. For loci that PASS, the scores do however give some
    metric of confidence.

  Limited judgements
    Both the score and the verdict are conditional on both the hairpin
    structure and the expression level in the specific small RNA-seq library
    being examined. Therefore, it is important to note that a low score
    and/or a verdict of FAIL does not necessarily mean that a locus is not a
    MIRNA. For instance, it could be that the locus is lowly expressed in
    the library being considered. For more robust "blacklisting" and
    "whitelisting" of MIRNA annotations, loci should be queried with respect
    to multiple small RNA-seq libraries.

  Adding flanking sequences
    When using maple to analyze existing MIRNA locus annotations from
    miRBase, it is a good idea to add some extra flanking sequence to the
    queries. Many miRBase hairpin entries are rather minimal, and don't
    include the full extent of the structured regions at the bases of the
    hairpins. Entering just these too-short queries could cause otherwise
    acceptable loci to fail because of insufficient buffer. Therefore I
    suggest padding all miRBase hairpin queries by 50nts on both sides to
    make sure the entire structured region is captured.

